/*
 * Copyright (c) 2016, University of Oslo
 *
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * Neither the name of the HISP project nor the names of its contributors may
 * be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: "com.android.library"
apply from: project.file("plugins/android-checkstyle.gradle")
apply from: project.file("plugins/android-findbugs.gradle")
apply from: project.file("plugins/android-pmd.gradle")

ext {
    configuration = [
            buildToolsVersion: "28.0.3",
            minSdkVersion    : 19,
            targetSdkVersion : 28,
            versionCode      : 200,
            versionName      : "1.0.0"
    ]

    libraries = [
            // android
            support         : '1.0.0-beta01',
            paging          : '2.1.0',

            // java
            jackson         : "2.9.8",
            autovalue       : "1.3",
            autovaluecursor : "1.0.1",
            retrofit        : "2.5.0",
            okhttp          : "3.14.0",
            duktape         : "1.1.0",
            dagger          : "2.14.1",
            rxjava          : "2.2.8",
            rxandroid       : "2.1.1",
            sqlcipher       : "4.2.0",

            // code checks
            findbugs        : "3.0.0",

            // test dependencies
            coretesting     : "1.1.1",
            junit           : "4.12",
            assertj         : "3.11.1",
            mockito         : "2.24.5",
            dexmaker        : "2.21.0",
            truth           : "0.31",
            testrunner      : '1.1.0-alpha4',
            equalsverifier  : "2.1.8",
            stetho          : "1.5.0",
            livedatatesting : "1.1.0",

            // plugins
            errorpronecore  : "2.0.15",

            //migrations
            snakeyaml  : "1.25",

            // google
            safetynet  : "16.0.0",
    ]
}

def configuration = project.ext.configuration
def libraries = project.ext.libraries

android {
    compileSdkVersion configuration.targetSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    defaultConfig {
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        // excluding duplicate license files
        // from jackson modules
        exclude "META-INF/LICENSE"

        // should be removed with interoperability library
        exclude "META-INF/rxjava.properties"
    }

    lintOptions {
        // casting 'InvalidPackage' error to warning
        warning "InvalidPackage"

        // Fail early.
        abortOnError true
    }

    buildTypes {
        debug {
            // a fix for the debugger not being able to find local scope variables
            testCoverageEnabled = false
        }
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
            resources.srcDirs += ['src/sharedTest/resources']
        }
        androidTest {
            java.srcDirs sharedTestDir
            resources.srcDirs += ['src/sharedTest/resources']
        }

    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}


dependencies {

    api "io.reactivex.rxjava2:rxjava:${libraries.rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${libraries.rxandroid}"

    api "org.yaml:snakeyaml:${libraries.snakeyaml}"

    // Support libraries
    api "androidx.annotation:annotation:${libraries.support}"

    api "androidx.paging:paging-runtime:${libraries.paging}"

    // Google's auto-value. Annotations are used only during compilation time, as well as

    // annotation processor which hoops up into compilation process
    compileOnly "com.google.auto.value:auto-value:${libraries.autovalue}"
    annotationProcessor "com.google.auto.value:auto-value:${libraries.autovalue}"

    // Dagger
    api "com.google.dagger:dagger:${libraries.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${libraries.dagger}"

    // Jackson
    api "com.fasterxml.jackson.core:jackson-databind:${libraries.jackson}"

    // Google's play services
    api "com.google.android.gms:play-services-safetynet:${libraries.safetynet}"

    // Square libraries
    api "com.squareup.okhttp3:okhttp:${libraries.okhttp}"
    api "com.squareup.retrofit2:retrofit:${libraries.retrofit}"
    api "com.squareup.retrofit2:converter-jackson:${libraries.retrofit}"
    api "com.squareup.retrofit2:adapter-rxjava2:${libraries.retrofit}"

    // Apache libraries
    api "org.apache.commons:commons-lang3:3.7"
    api("org.apache.commons:commons-jexl:2.1.1") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    testImplementation "commons-logging:commons-logging:1.2"

    // Joda time
    api "joda-time:joda-time:2.9.9"

    // sms compression library
    api 'com.github.eHealthAfrica:dhis2-sms-compression:0.1.5'

    // Extension which generates mappers for work with cursor and content values
    api "com.gabrielittner.auto.value:auto-value-cursor-annotations:${libraries.autovaluecursor}"
    annotationProcessor "com.gabrielittner.auto.value:auto-value-cursor:${libraries.autovaluecursor}"

    api "net.zetetic:android-database-sqlcipher:${libraries.sqlcipher}"

    api "com.google.code.findbugs:annotations:${libraries.findbugs}"

    // Java test dependencies
    testImplementation "junit:junit:${libraries.junit}"
    testImplementation "org.mockito:mockito-core:${libraries.mockito}"
    testImplementation "org.assertj:assertj-core:${libraries.assertj}"
    testImplementation "nl.jqno.equalsverifier:equalsverifier:${libraries.equalsverifier}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${libraries.okhttp}"
    testImplementation "com.google.code.findbugs:annotations:${libraries.findbugs}"
    testImplementation "androidx.test:runner:${libraries.testrunner}"

    // Android test dependencies
    androidTestImplementation "org.mockito:mockito-core:${libraries.mockito}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${libraries.okhttp}"
    androidTestImplementation "android.arch.core:core-testing:${libraries.coretesting}"
    androidTestImplementation "com.jraska.livedata:testing:${libraries.livedatatesting}"
    androidTestImplementation "androidx.test:runner:${libraries.testrunner}"
    androidTestImplementation "com.squareup.okhttp3:logging-interceptor:${libraries.okhttp}"
    androidTestImplementation("com.google.truth:truth:${libraries.truth}") {
        exclude group: 'junit' // Android has JUnit built in.
    }
    androidTestImplementation("com.facebook.stetho:stetho:${libraries.stetho}") {
        exclude module: 'jsr305'
    }
    androidTestImplementation("com.facebook.stetho:stetho-okhttp3:${libraries.stetho}") {
        exclude module: 'okhttp'
        exclude module: 'jsr305'
    }
}

apply from: project.file("plugins/gradle-mvn-push.gradle")
